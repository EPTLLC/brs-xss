#!/usr/bin/env python3

"""
Project: BRS-XSS Tests - ExploitabilityCalculator
Company: EasyProTech LLC (www.easypro.tech)
Dev: Brabus
Date: Fri 10 Oct 2025 18:07:00 UTC
Status: Created
Telegram: https://t.me/EasyProTech
"""

from brsxss.core.exploitability_calculator import ExploitabilityCalculator


class RP:
    def __init__(self, rtype="exact", acc=1.0, comp=1.0, preserved=None, filters=None, ctx="html_content"):
        self.reflection_type = type("T", (), {"value": rtype})()
        self.accuracy = acc
        self.completeness = comp
        self.special_chars_preserved = preserved or []
        self.filters_detected = filters or []
        self.context = ctx


class RR:
    def __init__(self, points):
        self.reflection_points = points


def test_exploitability_bonus_and_penalty():
    ec = ExploitabilityCalculator()
    # Critical chars preserved -> bonus
    rr_bonus = RR([RP(rtype="partial", acc=0.9, comp=0.9, preserved=['<','>'])])
    s_bonus = ec.calculate_exploitability_score(rr_bonus)
    # Many filters -> penalty lowers score
    rr_penalty = RR([RP(rtype="exact", acc=1.0, comp=1.0, preserved=['<','>','"',"'"], filters=['x','y','z'])])
    s_penalty = ec.calculate_exploitability_score(rr_penalty)
    assert s_bonus > 0
    assert s_penalty <= s_bonus


